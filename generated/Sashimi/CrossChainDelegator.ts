// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewAdmin extends ethereum.Event {
  get params(): NewAdmin__Params {
    return new NewAdmin__Params(this);
  }
}

export class NewAdmin__Params {
  _event: NewAdmin;

  constructor(event: NewAdmin) {
    this._event = event;
  }

  get oldAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewImplementation extends ethereum.Event {
  get params(): NewImplementation__Params {
    return new NewImplementation__Params(this);
  }
}

export class NewImplementation__Params {
  _event: NewImplementation;

  constructor(event: NewImplementation) {
    this._event = event;
  }

  get oldImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CrossChainDelegator extends ethereum.SmartContract {
  static bind(address: Address): CrossChainDelegator {
    return new CrossChainDelegator("CrossChainDelegator", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  delegateToImplementation(data: Bytes): Bytes {
    let result = super.call(
      "delegateToImplementation",
      "delegateToImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );

    return result[0].toBytes();
  }

  try_delegateToImplementation(data: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "delegateToImplementation",
      "delegateToImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  delegateToViewImplementation(data: Bytes): Bytes {
    let result = super.call(
      "delegateToViewImplementation",
      "delegateToViewImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );

    return result[0].toBytes();
  }

  try_delegateToViewImplementation(data: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "delegateToViewImplementation",
      "delegateToViewImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _acceptToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _confirmRequireNum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _acceptChains(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _implementation(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class _setAdminCall extends ethereum.Call {
  get inputs(): _setAdminCall__Inputs {
    return new _setAdminCall__Inputs(this);
  }

  get outputs(): _setAdminCall__Outputs {
    return new _setAdminCall__Outputs(this);
  }
}

export class _setAdminCall__Inputs {
  _call: _setAdminCall;

  constructor(call: _setAdminCall) {
    this._call = call;
  }

  get newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setAdminCall__Outputs {
  _call: _setAdminCall;

  constructor(call: _setAdminCall) {
    this._call = call;
  }
}

export class _setImplementationCall extends ethereum.Call {
  get inputs(): _setImplementationCall__Inputs {
    return new _setImplementationCall__Inputs(this);
  }

  get outputs(): _setImplementationCall__Outputs {
    return new _setImplementationCall__Outputs(this);
  }
}

export class _setImplementationCall__Inputs {
  _call: _setImplementationCall;

  constructor(call: _setImplementationCall) {
    this._call = call;
  }

  get implementation_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setImplementationCall__Outputs {
  _call: _setImplementationCall;

  constructor(call: _setImplementationCall) {
    this._call = call;
  }
}

export class DelegateToImplementationCall extends ethereum.Call {
  get inputs(): DelegateToImplementationCall__Inputs {
    return new DelegateToImplementationCall__Inputs(this);
  }

  get outputs(): DelegateToImplementationCall__Outputs {
    return new DelegateToImplementationCall__Outputs(this);
  }
}

export class DelegateToImplementationCall__Inputs {
  _call: DelegateToImplementationCall;

  constructor(call: DelegateToImplementationCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DelegateToImplementationCall__Outputs {
  _call: DelegateToImplementationCall;

  constructor(call: DelegateToImplementationCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
